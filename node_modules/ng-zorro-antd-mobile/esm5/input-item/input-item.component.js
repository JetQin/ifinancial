import { __decorate, __metadata } from "tslib";
import { Component, AfterViewInit, Input, Output, EventEmitter, ViewChild, OnInit, HostBinding, Renderer2, ElementRef, forwardRef, TemplateRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { isTemplateRef } from '../core/util/check';
var InputItemComponent = /** @class */ (function () {
    function InputItemComponent(element, render) {
        this.element = element;
        this.render = render;
        this.prefixCls = 'am-input';
        this.setFocus = {};
        this.pattern = '';
        this.autoFocus = false;
        this.inputType = 'text';
        this.ngTemplate = false;
        this.isTemplateRef = isTemplateRef;
        this._type = 'text';
        this._defaultValue = '';
        this._placeholder = '';
        this._editable = true;
        this._disabled = false;
        this._clear = false;
        this._error = false;
        this._extra = '';
        this._labelNumber = 5;
        this._updatePlaceholder = false;
        this._prefixListCls = 'am-list';
        this._moneyKeyboardAlign = 'right';
        this._focus = false;
        this._isClear = false;
        this._content = '';
        this._inputLock = false;
        this.compositionFilter = true;
        this.onChange = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onErrorClick = new EventEmitter();
        this.onExtraClick = new EventEmitter();
        this.clsItem = true;
        this.clsDisabled = this._disabled;
        this.clsError = this._error;
        this.clsFocus = this._focus;
        this.clsAndroid = this._focus;
        this._onChange = function (_) { };
        this._el = element.nativeElement;
    }
    InputItemComponent_1 = InputItemComponent;
    Object.defineProperty(InputItemComponent.prototype, "type", {
        get: function () {
            return this._type;
        },
        set: function (value) {
            if (value && value.length > 0) {
                this.inputType = value;
                if (value === 'bankCard' || value === 'phone') {
                    this._type = 'tel';
                }
                else if (value === 'password') {
                    this._type = 'password';
                }
                else if (value === 'digit') {
                    this._type = 'number';
                }
                else if (value !== 'text' && value !== 'number') {
                    this._type = value;
                }
                if (value === 'number') {
                    this.pattern = '[0-9]*';
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (v) {
            if (typeof v === 'undefined' || v === null) {
                this._value = '';
            }
            else {
                this._value = v;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "defaultValue", {
        get: function () {
            return this._defaultValue;
        },
        set: function (value) {
            this._defaultValue = value;
            if (!this._value) {
                this._value = this._defaultValue;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "placeholder", {
        get: function () {
            return this._placeholder;
        },
        set: function (value) {
            this._placeholder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "editable", {
        get: function () {
            return this._editable;
        },
        set: function (value) {
            this._editable = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            this.clsDisabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "clear", {
        get: function () {
            return this._clear;
        },
        set: function (value) {
            this._clear = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "maxLength", {
        get: function () {
            return this._maxLength;
        },
        set: function (value) {
            this._maxLength = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "error", {
        get: function () {
            return this._error;
        },
        set: function (value) {
            this._error = value;
            this.clsError = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "extra", {
        get: function () {
            return this._extra;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this.ngTemplate = true;
            }
            else {
                this.ngTemplate = false;
            }
            this._extra = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "labelNumber", {
        set: function (value) {
            this._labelNumber = value;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "updatePlaceholder", {
        set: function (value) {
            this._updatePlaceholder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "prefixListCls", {
        get: function () {
            return this._prefixListCls;
        },
        set: function (value) {
            this._prefixListCls = value;
            this.render.addClass(this._el, value + '-item');
            this.render.addClass(this._el, value + '-item-middle');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (value) {
            this._name = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "moneyKeyboardAlign", {
        get: function () {
            return this._moneyKeyboardAlign;
        },
        set: function (value) {
            this._moneyKeyboardAlign = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "locale", {
        set: function (value) {
            this._locale = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "fontColor", {
        get: function () {
            return this._fontColor;
        },
        set: function (value) {
            this._fontColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "focus", {
        set: function (value) {
            if (value && value.focus) {
                this.autoFocus = value.focus;
                if (this._type === 'money') {
                    this.setFocus = value;
                }
                else if (this.inputElementRef) {
                    this._focus = true;
                    this.inputElementRef.nativeElement.focus();
                    this.inputFocus('');
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputItemComponent.prototype, "content", {
        get: function () {
            return this._content;
        },
        set: function (value) {
            this._content = value;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    InputItemComponent.prototype.setCls = function () {
        var _a, _b;
        if (this.lableRef.nativeElement.children.length > 0 ||
            (this.lableRef.nativeElement && this.lableRef.nativeElement.innerText !== '') ||
            this._content != undefined) {
            this.labelCls = (_a = {},
                _a[this.prefixCls + "-label"] = true,
                _a[this.prefixCls + "-label-2"] = this._labelNumber === 2,
                _a[this.prefixCls + "-label-3"] = this._labelNumber === 3,
                _a[this.prefixCls + "-label-4"] = this._labelNumber === 4,
                _a[this.prefixCls + "-label-5"] = this._labelNumber === 5,
                _a[this.prefixCls + "-label-6"] = this._labelNumber === 6,
                _a[this.prefixCls + "-label-7"] = this._labelNumber === 7,
                _a);
        }
        this.controlCls = (_b = {}, _b[this.prefixCls + "-control"] = true, _b);
    };
    InputItemComponent.prototype.inputChange = function (inputValue) {
        var _this = this;
        // 'compositionend' is earlier than ngModelChange, Therefore use timer to make ngModelChange runs after 'compositionend' event
        setTimeout(function () {
            if (_this.compositionFilter && _this._inputLock && _this.inputType === 'text') {
                return;
            }
            var value = inputValue;
            switch (_this.inputType) {
                case 'bankCard':
                    value = value.replace(/\D/g, '').replace(/(....)(?=.)/g, '$1 ');
                    break;
                case 'phone':
                    value = value.replace(/\D/g, '').substring(0, 11);
                    var valueLen = value.length;
                    if (valueLen > 3 && valueLen < 8) {
                        value = value.substr(0, 3) + " " + value.substr(3);
                    }
                    else if (valueLen >= 8) {
                        value = value.substr(0, 3) + " " + value.substr(3, 4) + " " + value.substr(7);
                    }
                    break;
                case 'number':
                    value = value.replace(/\D/g, '');
                    break;
            }
            if (_this.inputType !== 'text') {
                _this._value = value;
            }
            _this._onChange(_this._value);
            _this.onChange.emit(_this._value);
        }, 0);
    };
    InputItemComponent.prototype.compositionStart = function () {
        this._inputLock = true;
    };
    InputItemComponent.prototype.compositionEnd = function () {
        this._inputLock = false;
    };
    InputItemComponent.prototype.inputFocus = function (value) {
        var _this = this;
        if (!this._editable && document.activeElement instanceof HTMLElement) {
            document.activeElement.blur();
        }
        setTimeout(function () {
            _this._focus = true;
            _this.clsFocus = true;
            _this.clsAndroid = true;
        }, 100);
        this.onFocus.emit(value);
    };
    InputItemComponent.prototype.inputBlur = function (value) {
        var _this = this;
        setTimeout(function () {
            if (!_this._isClear) {
                _this._focus = false;
                _this.clsFocus = false;
                _this.clsAndroid = false;
                _this.onBlur.emit(value);
            }
            _this._isClear = false;
        }, 100);
    };
    InputItemComponent.prototype.clearInput = function () {
        if (this._type !== 'password' && this._updatePlaceholder) {
            this._placeholder = this._value;
        }
        this._value = '';
        this.onChange.emit(this._value);
        this._onChange(this._value);
        this._isClear = true;
        this.inputFocus(this._value);
    };
    InputItemComponent.prototype.errorClick = function (e) {
        if (this.onErrorClick) {
            this.onErrorClick.emit(e);
        }
    };
    InputItemComponent.prototype.extraClick = function (e) {
        if (this.onExtraClick) {
            this.onExtraClick.emit(e);
        }
    };
    InputItemComponent.prototype.writeValue = function (value) {
        if (typeof value === undefined || value === null) {
            this._value = '';
        }
        else {
            this._value = value;
        }
    };
    InputItemComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    InputItemComponent.prototype.registerOnChange = function (fn) {
        this._onChange = fn;
    };
    InputItemComponent.prototype.registerOnTouched = function (fn) { };
    InputItemComponent.prototype.ngOnInit = function () {
        this.setCls();
        this.render.addClass(this._el, this._prefixListCls + '-item');
        this.render.addClass(this._el, this._prefixListCls + '-item-middle');
    };
    InputItemComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.setCls();
        }, 0);
    };
    var InputItemComponent_1;
    InputItemComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        ViewChild('lableContent', { static: true }),
        __metadata("design:type", ElementRef)
    ], InputItemComponent.prototype, "lableRef", void 0);
    __decorate([
        ViewChild('inputElement'),
        __metadata("design:type", ElementRef)
    ], InputItemComponent.prototype, "inputElementRef", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "type", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "value", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "defaultValue", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "placeholder", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], InputItemComponent.prototype, "editable", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], InputItemComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], InputItemComponent.prototype, "clear", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], InputItemComponent.prototype, "maxLength", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], InputItemComponent.prototype, "error", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], InputItemComponent.prototype, "extra", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], InputItemComponent.prototype, "labelNumber", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], InputItemComponent.prototype, "updatePlaceholder", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "prefixListCls", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "name", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "moneyKeyboardAlign", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], InputItemComponent.prototype, "locale", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], InputItemComponent.prototype, "fontColor", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], InputItemComponent.prototype, "focus", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], InputItemComponent.prototype, "content", null);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], InputItemComponent.prototype, "compositionFilter", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], InputItemComponent.prototype, "onChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], InputItemComponent.prototype, "onBlur", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], InputItemComponent.prototype, "onFocus", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], InputItemComponent.prototype, "onErrorClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], InputItemComponent.prototype, "onExtraClick", void 0);
    __decorate([
        HostBinding('class.am-input-item'),
        __metadata("design:type", Boolean)
    ], InputItemComponent.prototype, "clsItem", void 0);
    __decorate([
        HostBinding('class.am-input-disabled'),
        __metadata("design:type", Boolean)
    ], InputItemComponent.prototype, "clsDisabled", void 0);
    __decorate([
        HostBinding('class.am-input-error'),
        __metadata("design:type", Boolean)
    ], InputItemComponent.prototype, "clsError", void 0);
    __decorate([
        HostBinding('class.am-input-focus'),
        __metadata("design:type", Boolean)
    ], InputItemComponent.prototype, "clsFocus", void 0);
    __decorate([
        HostBinding('class.am-input-android,'),
        __metadata("design:type", Boolean)
    ], InputItemComponent.prototype, "clsAndroid", void 0);
    InputItemComponent = InputItemComponent_1 = __decorate([
        Component({
            selector: 'InputItem, nzm-input-item',
            template: "<div class=\"{{ prefixListCls }}-line\">\n  <div #lableContent [ngClass]=\"labelCls\">\n    <ng-template *ngIf=\"isTemplateRef(content)\" [ngTemplateOutlet]=\"content\"></ng-template>\n    <ng-container *ngIf=\"!isTemplateRef(content)\">{{ content }}</ng-container>\n  </div>\n  <div [ngClass]=\"controlCls\">\n    <CustomInput\n      *ngIf=\"type === 'money'\"\n      [value]=\"value\"\n      [defaultValue]=\"defaultValue\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [editable]=\"editable\"\n      [fontColor]=\"fontColor\"\n      [moneyKeyboardAlign]=\"moneyKeyboardAlign\"\n      [setFocus]=\"setFocus\"\n      [maxLength]=\"maxLength\"\n      (onChange)=\"inputChange($event)\"\n      (onBlur)=\"inputBlur(value)\"\n      (onFocus)=\"inputFocus(value)\"\n    >\n    </CustomInput>\n    <div *ngIf=\"type !== 'money'\">\n      <input\n        #inputElement\n        style=\"outline:none\"\n        [type]=\"type\"\n        [name]=\"name\"\n        [(ngModel)]=\"value\"\n        [defaultValue]=\"defaultValue\"\n        [placeholder]=\"placeholder\"\n        [disabled]=\"disabled\"\n        [readOnly]=\"!editable\"\n        [autofocus]=\"autoFocus\"\n        [maxlength]=\"maxLength\"\n        [pattern]=\"pattern\"\n        [style.color]=\"fontColor\"\n        (ngModelChange)=\"inputChange($event)\"\n        (compositionstart)=\"compositionStart()\"\n        (compositionend)=\"compositionEnd()\"\n        (blur)=\"inputBlur(value)\"\n        (focus)=\"inputFocus(value)\"\n      />\n    </div>\n  </div>\n  <div\n    *ngIf=\"clear && editable && !disabled && (value && value.length > 0)\"\n    class=\"{{ prefixCls }}-clear\"\n    (click)=\"clearInput()\"\n  ></div>\n  <div *ngIf=\"error\" class=\"{{ prefixCls }}-error-extra\" (click)=\"errorClick($event)\"></div>\n  <div *ngIf=\"extra !== ''\" class=\"{{ prefixCls }}-extra\" (click)=\"extraClick($event)\">\n    <ng-container *ngIf=\"!ngTemplate\">{{ extra }}</ng-container>\n    <ng-template *ngIf=\"ngTemplate\" [ngTemplateOutlet]=\"extra\"></ng-template>\n  </div>\n</div>\n",
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return InputItemComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], InputItemComponent);
    return InputItemComponent;
}());
export { InputItemComponent };
//# sourceMappingURL=data:application/json;base64,