import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectorRef, Output, EventEmitter, ViewEncapsulation, HostBinding, TemplateRef } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { AccordionService } from '../accordion.service';
import { isTemplateRef } from '../../core/util/check';
var AccordionGroupComponent = /** @class */ (function () {
    function AccordionGroupComponent(_accordionService, _cdr) {
        this._accordionService = _accordionService;
        this._cdr = _cdr;
        this.isShowChild = true;
        this.isOpened = false;
        this.disabled = false;
        this.onOpen = new EventEmitter();
        this.onClose = new EventEmitter();
        this.onChange = new EventEmitter();
        this.isTemplateRef = isTemplateRef;
        this.amItem = true;
        this.isActive = this.isOpened;
        this.addon = true;
    }
    AccordionGroupComponent.prototype.checkAndToggle = function () {
        this.toggle();
    };
    Object.defineProperty(AccordionGroupComponent.prototype, "slide", {
        get: function () {
            return this.isOpened ? 'down' : 'up';
        },
        enumerable: true,
        configurable: true
    });
    AccordionGroupComponent.prototype.toggle = function () {
        if (this.disabled) {
            return;
        }
        this.isShowChild = true;
        var isOpenedBeforeWeChange = this.isOpened;
        if (this._accordionService.accordion) {
            this._accordionService.component.closeAll();
        }
        this.isOpened = !isOpenedBeforeWeChange;
        if (this.isOpened) {
            this.onOpen.emit();
        }
        else {
            this.onClose.emit();
        }
        this.onChange.emit(this.isOpened);
    };
    AccordionGroupComponent.prototype.openOnInitialization = function () {
        var _this = this;
        setTimeout(function () {
            _this.isOpened = true;
            _this._cdr.detectChanges();
        }, 0);
    };
    AccordionGroupComponent.prototype.slideAnimationDoen = function (event) {
        var _this = this;
        if (event.fromState === 'down' && event.toState === 'up') {
            setTimeout(function () {
                _this.isShowChild = false;
            }, 0);
        }
    };
    AccordionGroupComponent.ctorParameters = function () { return [
        { type: AccordionService },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AccordionGroupComponent.prototype, "key", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "header", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AccordionGroupComponent.prototype, "isOpened", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AccordionGroupComponent.prototype, "disabled", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "onOpen", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "onClose", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "onChange", void 0);
    __decorate([
        HostBinding('class.am-accordion-item'),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "amItem", void 0);
    __decorate([
        HostBinding('class.am-accordion-item-active'),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "isActive", void 0);
    __decorate([
        HostBinding('class.addon'),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "addon", void 0);
    AccordionGroupComponent = __decorate([
        Component({
            selector: 'AccordionPanel, nzm-accordion-panel',
            template: "<div\n  role=\"tab\"\n  class=\"am-accordion-header\"\n  data-scale=\"true\"\n  [attr.aria-expanded]=\"isOpened\"\n  (click)=\"checkAndToggle()\"\n>\n  <i class=\"arrow\"></i>\n  <ng-container *ngIf=\"!isTemplateRef(header)\">{{ header }}</ng-container>\n  <ng-template *ngIf=\"isTemplateRef(header)\" [ngTemplateOutlet]=\"header\"></ng-template>\n</div>\n<div\n  role=\"tabpanel\"\n  class=\"am-accordion-content\"\n  [ngClass]=\"{ 'am-accordion-content-active': isOpened }\"\n  [@slide]=\"slide\"\n  (@slide.done)=\"slideAnimationDoen($event)\"\n>\n  <div *ngIf=\"isShowChild\" class=\"am-accordion-content-box\">\n    <ng-content></ng-content>\n  </div>\n</div>\n",
            encapsulation: ViewEncapsulation.None,
            animations: [
                trigger('slide', [
                    state('up', style({ height: 0 })),
                    state('down', style({ height: '*' })),
                    transition('down => up', [animate(200, style({ height: 0 }))]),
                    transition('up => down', [
                        animate(200, style({
                            height: '*'
                        }))
                    ])
                ])
            ]
        }),
        __metadata("design:paramtypes", [AccordionService, ChangeDetectorRef])
    ], AccordionGroupComponent);
    return AccordionGroupComponent;
}());
export { AccordionGroupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC9hY2NvcmRpb24tZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFDTCxpQkFBaUIsRUFDakIsTUFBTSxFQUNOLFlBQVksRUFDWixpQkFBaUIsRUFDakIsV0FBVyxFQUNYLFdBQVcsRUFDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQXFCdEQ7SUF1QkUsaUNBQW9CLGlCQUFtQyxFQUFVLElBQXVCO1FBQXBFLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBa0I7UUFBVSxTQUFJLEdBQUosSUFBSSxDQUFtQjtRQXRCeEYsZ0JBQVcsR0FBWSxJQUFJLENBQUM7UUFPNUIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUUxQixhQUFRLEdBQVksS0FBSyxDQUFDO1FBRTFCLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTVCLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTdCLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzlCLGtCQUFhLEdBQUcsYUFBYSxDQUFDO1FBRWlCLFdBQU0sR0FBRyxJQUFJLENBQUM7UUFDUCxhQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM1QyxVQUFLLEdBQUcsSUFBSSxDQUFDO0lBRTJDLENBQUM7SUFFNUYsZ0RBQWMsR0FBZDtR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RUFDSCxLQUFLLENBQUM7NEJBQ0osTUFBTSxFQUFFLEdBQUc7eUJBQ1osQ0FBQyxDQUNIO3FCQUNGLENBQUM7aUJBQ0gsQ0FBQzthQUNIO1NBQ0YsQ0FBQzt5Q0F3QnVDLGdCQUFnQixFQUFnQixpQkFBaUI7T0F2QjdFLHVCQUF1QixDQWlFbkM7SUFBRCw4QkFBQztDQUFBLEFBakVELElBaUVDO1NBakVZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIEhvc3RCaW5kaW5nLFxuICBUZW1wbGF0ZVJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFuaW1hdGUsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgQWNjb3JkaW9uU2VydmljZSB9IGZyb20gJy4uL2FjY29yZGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IGlzVGVtcGxhdGVSZWYgfSBmcm9tICcuLi8uLi9jb3JlL3V0aWwvY2hlY2snO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnQWNjb3JkaW9uUGFuZWwsIG56bS1hY2NvcmRpb24tcGFuZWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vYWNjb3JkaW9uLWdyb3VwLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgYW5pbWF0aW9uczogW1xuICAgIHRyaWdnZXIoJ3NsaWRlJywgW1xuICAgICAgc3RhdGUoJ3VwJywgc3R5bGUoeyBoZWlnaHQ6IDAgfSkpLFxuICAgICAgc3RhdGUoJ2Rvd24nLCBzdHlsZSh7IGhlaWdodDogJyonIH0pKSxcbiAgICAgIHRyYW5zaXRpb24oJ2Rvd24gPT4gdXAnLCBbYW5pbWF0ZSgyMDAsIHN0eWxlKHsgaGVpZ2h0OiAwIH0pKV0pLFxuICAgICAgdHJhbnNpdGlvbigndXAgPT4gZG93bicsIFtcbiAgICAgICAgYW5pbWF0ZShcbiAgICAgICAgICAyMDAsXG4gICAgICAgICAgc3R5bGUoe1xuICAgICAgICAgICAgaGVpZ2h0OiAnKidcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICBdKVxuICAgIF0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQWNjb3JkaW9uR3JvdXBDb21wb25lbnQge1xuICBpc1Nob3dDaGlsZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgQElucHV0KClcbiAga2V5OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGhlYWRlcjogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD47XG4gIEBJbnB1dCgpXG4gIGlzT3BlbmVkOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpXG4gIGRpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG4gIEBPdXRwdXQoKVxuICBvbk9wZW4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKVxuICBvbkNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KClcbiAgb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIGlzVGVtcGxhdGVSZWYgPSBpc1RlbXBsYXRlUmVmO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tYWNjb3JkaW9uLWl0ZW0nKSBwdWJsaWMgYW1JdGVtID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1hY2NvcmRpb24taXRlbS1hY3RpdmUnKSBwdWJsaWMgaXNBY3RpdmUgPSB0aGlzLmlzT3BlbmVkO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFkZG9uJykgcHVibGljIGFkZG9uID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9hY2NvcmRpb25TZXJ2aWNlOiBBY2NvcmRpb25TZXJ2aWNlLCBwcml2YXRlIF9jZHI6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIGNoZWNrQW5kVG9nZ2xlKCkge1xuICAgIHRoaXMudG9nZ2xlKCk7XG4gIH1cblxuICBnZXQgc2xpZGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5pc09wZW5lZCA/ICdkb3duJyA6ICd1cCc7XG4gIH1cblxuICB0b2dnbGUoKSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5pc1Nob3dDaGlsZCA9IHRydWU7XG4gICAgY29uc3QgaXNPcGVuZWRCZWZvcmVXZUNoYW5nZSA9IHRoaXMuaXNPcGVuZWQ7XG4gICAgaWYgKHRoaXMuX2FjY29yZGlvblNlcnZpY2UuYWNjb3JkaW9uKSB7XG4gICAgICB0aGlzLl9hY2NvcmRpb25TZXJ2aWNlLmNvbXBvbmVudC5jbG9zZUFsbCgpO1xuICAgIH1cbiAgICB0aGlzLmlzT3BlbmVkID0gIWlzT3BlbmVkQmVmb3JlV2VDaGFuZ2U7XG4gICAgaWYgKHRoaXMuaXNPcGVuZWQpIHtcbiAgICAgIHRoaXMub25PcGVuLmVtaXQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vbkNsb3NlLmVtaXQoKTtcbiAgICB9XG4gICAgdGhpcy5vbkNoYW5nZS5lbWl0KHRoaXMuaXNPcGVuZWQpO1xuICB9XG5cbiAgb3Blbk9uSW5pdGlhbGl6YXRpb24oKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLmlzT3BlbmVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2Nkci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfSwgMCk7XG4gIH1cblxuICBzbGlkZUFuaW1hdGlvbkRvZW4oZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQuZnJvbVN0YXRlID09PSAnZG93bicgJiYgZXZlbnQudG9TdGF0ZSA9PT0gJ3VwJykge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuaXNTaG93Q2hpbGQgPSBmYWxzZTtcbiAgICAgIH0sIDApO1xuICAgIH1cbiAgfVxufVxuIl19