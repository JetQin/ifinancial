{"version":3,"file":"PluginService.js","sources":["PluginService.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;gDAGsB;AACtB;AACA;AACA;AACA","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nfunction generateRandomNum() {\n    return (Math.floor(new Date().getTime() + Math.random() * 10000)).toString();\n}\nvar PluginContext = (function () {\n    function PluginContext() {\n        this.config = {};\n        this.container = 'viser-slider-' + generateRandomNum();\n    }\n    PluginContext = __decorate([\n        Injectable()\n    ], PluginContext);\n    return PluginContext;\n}());\nexport { PluginContext };\n"]}