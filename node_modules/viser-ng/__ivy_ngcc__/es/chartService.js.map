{"version":3,"file":"chartService.js","sources":["chartService.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAEO;AACP;;;;;gDAAqB;AACrB;AACA;AACA;AACA","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nfunction generateRandomNum() {\n    return (Math.floor(new Date().getTime() + Math.random() * 10000)).toString();\n}\nvar ChartContext = (function () {\n    function ChartContext() {\n        this.lastFacetId = '';\n        this.config = {};\n        this.views = {};\n        this.facetviews = {};\n        this.viewId = generateRandomNum();\n    }\n    ChartContext = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], ChartContext);\n    return ChartContext;\n}());\nexport { ChartContext };\n"]}