import * as Éµngcc0 from '@angular/core';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { Chart } from '../Chart';
import * as IStyle from './Style';
var Legend = (function (_super) {
    __extends(Legend, _super);
    function Legend() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "dataKey");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "show");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "position");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "title");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "custom");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "offset");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "offsetX");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "offsetY");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Legend.prototype, "items");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "itemGap");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "titleGap");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "itemMarginBottom");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Legend.prototype, "itemsGroup");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "layout");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "allowAllCanceled");
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], Legend.prototype, "backPadding");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "itemWidth");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "unCheckColor");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "background");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "itemFormatter");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "marker");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "textStyle");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "checkable");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "clickable");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "hoverable");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "useHtml");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "autoWrap");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "autoPosition");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "container");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "containerTpl");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "itemTpl");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "selectedMode");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "reversed");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "slidable");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "width");
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], Legend.prototype, "height");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendMarker");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendListItem");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendTitle");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendList");
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], Legend.prototype, "legendStyle");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "attachLast");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "flipPage");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "name");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "reactive");
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], Legend.prototype, "sizeType");
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], Legend.prototype, "isSegment");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onHover");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTitleTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onItemTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onMarkerTouchEnd");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseDown");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseLeave");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextMouseUp");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextDblClick");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextTouchStart");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextTouchMove");
    __decorate([
        Input(),
        __metadata("design:type", Function)
    ], Legend.prototype, "onTextTouchEnd");
Legend.Éµfac = function Legend_Factory(t) { return ÉµLegend_BaseFactory(t || Legend); };
Legend.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: Legend, selectors: [["v-legend"]], inputs: { dataKey: "dataKey", show: "show", position: "position", title: "title", custom: "custom", offset: "offset", offsetX: "offsetX", offsetY: "offsetY", items: "items", itemGap: "itemGap", titleGap: "titleGap", itemMarginBottom: "itemMarginBottom", itemsGroup: "itemsGroup", layout: "layout", allowAllCanceled: "allowAllCanceled", backPadding: "backPadding", itemWidth: "itemWidth", unCheckColor: "unCheckColor", background: "background", itemFormatter: "itemFormatter", marker: "marker", textStyle: "textStyle", checkable: "checkable", clickable: "clickable", hoverable: "hoverable", useHtml: "useHtml", autoWrap: "autoWrap", autoPosition: "autoPosition", container: "container", containerTpl: "containerTpl", itemTpl: "itemTpl", selectedMode: "selectedMode", reversed: "reversed", slidable: "slidable", width: "width", height: "height", legendMarker: "legendMarker", legendListItem: "legendListItem", legendTitle: "legendTitle", legendList: "legendList", legendStyle: "legendStyle", attachLast: "attachLast", flipPage: "flipPage", name: "name", reactive: "reactive", sizeType: "sizeType", isSegment: "isSegment", onHover: "onHover", onClick: "onClick", onTitleMouseDown: "onTitleMouseDown", onTitleMouseMove: "onTitleMouseMove", onTitleMouseLeave: "onTitleMouseLeave", onTitleMouseUp: "onTitleMouseUp", onTitleClick: "onTitleClick", onTitleDblClick: "onTitleDblClick", onTitleTouchStart: "onTitleTouchStart", onTitleTouchMove: "onTitleTouchMove", onTitleTouchEnd: "onTitleTouchEnd", onItemMouseDown: "onItemMouseDown", onItemMouseMove: "onItemMouseMove", onItemMouseLeave: "onItemMouseLeave", onItemMouseUp: "onItemMouseUp", onItemClick: "onItemClick", onItemDblClick: "onItemDblClick", onItemTouchStart: "onItemTouchStart", onItemTouchMove: "onItemTouchMove", onItemTouchEnd: "onItemTouchEnd", onMarkerMouseDown: "onMarkerMouseDown", onMarkerMouseMove: "onMarkerMouseMove", onMarkerMouseLeave: "onMarkerMouseLeave", onMarkerMouseUp: "onMarkerMouseUp", onMarkerClick: "onMarkerClick", onMarkerDblClick: "onMarkerDblClick", onMarkerTouchStart: "onMarkerTouchStart", onMarkerTouchMove: "onMarkerTouchMove", onMarkerTouchEnd: "onMarkerTouchEnd", onTextMouseDown: "onTextMouseDown", onTextMouseMove: "onTextMouseMove", onTextMouseLeave: "onTextMouseLeave", onTextMouseUp: "onTextMouseUp", onTextClick: "onTextClick", onTextDblClick: "onTextDblClick", onTextTouchStart: "onTextTouchStart", onTextTouchMove: "onTextTouchMove", onTextTouchEnd: "onTextTouchEnd" }, features: [Éµngcc0.ÉµÉµInheritDefinitionFeature], decls: 2, vars: 0, consts: [["chartDom", ""]], template: function Legend_Template(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµelement(0, "div", null, 0);
    } }, encapsulation: 2 });
var ÉµLegend_BaseFactory = /*@__PURE__*/ Éµngcc0.ÉµÉµgetInheritedFactory(Legend);
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(Legend, [{
        type: Component,
        args: [{
                selector: 'v-legend',
                template: "<div #chartDom></div>"
            }]
    }], null, { dataKey: [{
            type: Input
        }], show: [{
            type: Input
        }], position: [{
            type: Input
        }], title: [{
            type: Input
        }], custom: [{
            type: Input
        }], offset: [{
            type: Input
        }], offsetX: [{
            type: Input
        }], offsetY: [{
            type: Input
        }], items: [{
            type: Input
        }], itemGap: [{
            type: Input
        }], titleGap: [{
            type: Input
        }], itemMarginBottom: [{
            type: Input
        }], itemsGroup: [{
            type: Input
        }], layout: [{
            type: Input
        }], allowAllCanceled: [{
            type: Input
        }], backPadding: [{
            type: Input
        }], itemWidth: [{
            type: Input
        }], unCheckColor: [{
            type: Input
        }], background: [{
            type: Input
        }], itemFormatter: [{
            type: Input
        }], marker: [{
            type: Input
        }], textStyle: [{
            type: Input
        }], checkable: [{
            type: Input
        }], clickable: [{
            type: Input
        }], hoverable: [{
            type: Input
        }], useHtml: [{
            type: Input
        }], autoWrap: [{
            type: Input
        }], autoPosition: [{
            type: Input
        }], container: [{
            type: Input
        }], containerTpl: [{
            type: Input
        }], itemTpl: [{
            type: Input
        }], selectedMode: [{
            type: Input
        }], reversed: [{
            type: Input
        }], slidable: [{
            type: Input
        }], width: [{
            type: Input
        }], height: [{
            type: Input
        }], legendMarker: [{
            type: Input
        }], legendListItem: [{
            type: Input
        }], legendTitle: [{
            type: Input
        }], legendList: [{
            type: Input
        }], legendStyle: [{
            type: Input
        }], attachLast: [{
            type: Input
        }], flipPage: [{
            type: Input
        }], name: [{
            type: Input
        }], reactive: [{
            type: Input
        }], sizeType: [{
            type: Input
        }], isSegment: [{
            type: Input
        }], onHover: [{
            type: Input
        }], onClick: [{
            type: Input
        }], onTitleMouseDown: [{
            type: Input
        }], onTitleMouseMove: [{
            type: Input
        }], onTitleMouseLeave: [{
            type: Input
        }], onTitleMouseUp: [{
            type: Input
        }], onTitleClick: [{
            type: Input
        }], onTitleDblClick: [{
            type: Input
        }], onTitleTouchStart: [{
            type: Input
        }], onTitleTouchMove: [{
            type: Input
        }], onTitleTouchEnd: [{
            type: Input
        }], onItemMouseDown: [{
            type: Input
        }], onItemMouseMove: [{
            type: Input
        }], onItemMouseLeave: [{
            type: Input
        }], onItemMouseUp: [{
            type: Input
        }], onItemClick: [{
            type: Input
        }], onItemDblClick: [{
            type: Input
        }], onItemTouchStart: [{
            type: Input
        }], onItemTouchMove: [{
            type: Input
        }], onItemTouchEnd: [{
            type: Input
        }], onMarkerMouseDown: [{
            type: Input
        }], onMarkerMouseMove: [{
            type: Input
        }], onMarkerMouseLeave: [{
            type: Input
        }], onMarkerMouseUp: [{
            type: Input
        }], onMarkerClick: [{
            type: Input
        }], onMarkerDblClick: [{
            type: Input
        }], onMarkerTouchStart: [{
            type: Input
        }], onMarkerTouchMove: [{
            type: Input
        }], onMarkerTouchEnd: [{
            type: Input
        }], onTextMouseDown: [{
            type: Input
        }], onTextMouseMove: [{
            type: Input
        }], onTextMouseLeave: [{
            type: Input
        }], onTextMouseUp: [{
            type: Input
        }], onTextClick: [{
            type: Input
        }], onTextDblClick: [{
            type: Input
        }], onTextTouchStart: [{
            type: Input
        }], onTextTouchMove: [{
            type: Input
        }], onTextTouchEnd: [{
            type: Input
        }] }); })();
    return Legend;
}(Chart));
export { Legend };

//# sourceMappingURL=Legend.js.map