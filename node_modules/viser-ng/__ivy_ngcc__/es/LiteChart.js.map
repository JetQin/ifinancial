{"version":3,"file":"LiteChart.js","sources":["LiteChart.js"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAOkB;AAClB;AACA;AACA;AACA","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport viser from 'viser';\nfunction retain(obj, attr) {\n    var newObj = Object.create(null);\n    for (var item in obj) {\n        if (obj.hasOwnProperty(item)) {\n            var arrAttr = Array.isArray(attr) ? attr : [attr];\n            if (arrAttr.indexOf(item) >= 0) {\n                newObj[item] = obj[item];\n            }\n        }\n    }\n    return newObj;\n}\nvar LiteChart = (function () {\n    function LiteChart() {\n        this.config = {};\n        this.views = {};\n        this.chart = null;\n    }\n    LiteChart.prototype.combineViewConfig = function (props, config) {\n        if (props.data) {\n            config.data = props.data;\n        }\n        if (props.scale) {\n            config.scale = props.scale;\n        }\n        if (props.filter) {\n            config.filter = props.filter;\n        }\n        if (props.guide) {\n            config.guide = props.guide;\n        }\n        config.tooltip = props.tooltip ? props.tooltip : true;\n        config.legend = props.legend ? props.legend : true;\n        config.axis = props.axis ? props.axis : true;\n        return config;\n    };\n    LiteChart.prototype.combineChartConfig = function (props, config) {\n        var chartRetain = [\n            'height', 'width', 'animate', 'forceFit',\n            'background', 'plotBackground', 'padding', 'renderer',\n        ];\n        config.chart = retain(props, chartRetain);\n        return config;\n    };\n    LiteChart.prototype.combineSeriesConfig = function (props, config) {\n        var regSeries = [\n            'pie',\n            'sector',\n            'line',\n            'smoothLine',\n            'dashLine',\n            'area',\n            'stackArea',\n            'smoothArea',\n            'bar',\n            'stackBar',\n            'dodgeBar',\n            'interval',\n            'stackInterval',\n            'dodgeInterval',\n            'point',\n            'funnel',\n            'pyramid',\n            'schema',\n            'box',\n            'candle',\n            'polygon',\n            'contour',\n            'heatmap',\n            'edge',\n            'sankey',\n            'errobBar',\n            'jitterPoint',\n        ];\n        for (var _i = 0, regSeries_1 = regSeries; _i < regSeries_1.length; _i++) {\n            var res = regSeries_1[_i];\n            if (props[res]) {\n                config.series = __assign({}, config.series, { quickType: res });\n                break;\n            }\n        }\n        return config;\n    };\n    LiteChart.prototype.ngAfterViewInit = function () {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n        this.initChart();\n    };\n    LiteChart.prototype.getProps = function (allProps) {\n        var strippingProperties = ['chart', 'chartDiv', 'config', 'context', 'constructor',\n            'combineViewConfig', 'combineChartConfig', 'combineContentConfig', 'ngAfterViewInit', 'getProps',\n            'combineSeriesConfig', 'getViewChartConfig', 'initChart', 'ngOnChanges', 'renderChart'];\n        if (allProps) {\n            var properties = {};\n            for (var key in allProps) {\n                if (strippingProperties.indexOf(key) === -1) {\n                    properties[key] = allProps[key];\n                }\n            }\n            return properties;\n        }\n        return allProps;\n    };\n    LiteChart.prototype.getViewChartConfig = function (config) {\n        var chartProperties = ['forceFit', 'height', 'width', 'container'];\n        var chart = {};\n        if (config.chart) {\n            for (var key in config.chart) {\n                if (chartProperties.indexOf(key) > -1) {\n                    chart[key] = config.chart[key];\n                }\n            }\n        }\n        return chart;\n    };\n    LiteChart.prototype.initChart = function (rerender) {\n        var props = this.getProps(this);\n        this.combineChartConfig(props, this.config);\n        this.combineViewConfig(props, this.config);\n        this.combineSeriesConfig(props, this.config);\n        this.config.chart = this.getViewChartConfig(this.config);\n        this.renderChart(rerender);\n    };\n    LiteChart.prototype.ngOnChanges = function (changes) {\n        if (!this.chart) {\n            return;\n        }\n        this.initChart(true);\n    };\n    LiteChart.prototype.renderChart = function (rerender) {\n        this.config.chart.container = this.chartDiv.nativeElement;\n        if (rerender) {\n            this.chart.repaint(this.config);\n        }\n        else {\n            this.chart = viser(this.config);\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"data\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LiteChart.prototype, \"width\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LiteChart.prototype, \"height\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LiteChart.prototype, \"gemo\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], LiteChart.prototype, \"color\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"label\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LiteChart.prototype, \"radius\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number)\n    ], LiteChart.prototype, \"innerRadius\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"forceFit\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"fields\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"type\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"opacity\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"size\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"coord\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"scale\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"axis\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"guide\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"series\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"tooltip\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"facet\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], LiteChart.prototype, \"legend\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LiteChart.prototype, \"theme\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], LiteChart.prototype, \"renderer\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"pie\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"sector\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"line\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"smoothLine\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"dashLine\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"area\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"stackArea\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"smoothArea\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"bar\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"stackBar\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"dodgeBar\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"point\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"funnel\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"pyramid\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"schema\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"box\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"candle\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"polygon\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"contour\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"heatmap\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"edge\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"sankey\");\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], LiteChart.prototype, \"errorBar\");\n    __decorate([\n        ViewChild('chartDom', { static: true }),\n        __metadata(\"design:type\", ElementRef)\n    ], LiteChart.prototype, \"chartDiv\");\n    LiteChart = __decorate([\n        Component({\n            providers: [],\n            selector: 'v-liteChart',\n            template: \"<div #chartDom></div>\",\n        })\n    ], LiteChart);\n    return LiteChart;\n}());\nexport { LiteChart };\n"]}