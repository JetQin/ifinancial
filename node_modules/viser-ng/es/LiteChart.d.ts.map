{"version":3,"file":"LiteChart.d.ts","sources":["LiteChart.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { IAxis, ICoord, IFacet, IGuide, ILegend, IScale, ISeries, ITooltip, IViewConfig } from 'viser';\nexport declare class LiteChart implements AfterViewInit, OnChanges {\n    data: any;\n    width?: number;\n    height?: number;\n    gemo?: string;\n    color?: any[];\n    label?: boolean;\n    radius?: number;\n    innerRadius?: number;\n    forceFit?: boolean;\n    fields?: any;\n    type?: any;\n    opacity?: any;\n    size?: any;\n    coord?: ICoord;\n    scale?: IScale;\n    axis?: IAxis;\n    guide?: IGuide;\n    series?: ISeries;\n    tooltip?: ITooltip;\n    facet?: IFacet;\n    legend?: ILegend;\n    theme?: string;\n    renderer?: string;\n    pie?: boolean;\n    sector?: boolean;\n    line?: boolean;\n    smoothLine?: boolean;\n    dashLine?: boolean;\n    area?: boolean;\n    stackArea?: boolean;\n    smoothArea?: boolean;\n    bar?: boolean;\n    stackBar?: boolean;\n    dodgeBar?: boolean;\n    point?: boolean;\n    funnel?: boolean;\n    pyramid?: boolean;\n    schema?: boolean;\n    box?: boolean;\n    candle?: boolean;\n    polygon?: boolean;\n    contour?: boolean;\n    heatmap?: boolean;\n    edge?: boolean;\n    sankey?: boolean;\n    errorBar?: boolean;\n    chartDiv: ElementRef<HTMLDivElement>;\n    config: any;\n    views: IViewConfig;\n    chart: any;\n    combineViewConfig(props: any, config: any): any;\n    combineChartConfig(props: any, config: any): any;\n    combineSeriesConfig(props: any, config: any): any;\n    ngAfterViewInit(): void;\n    getProps(allProps: any): any;\n    getViewChartConfig(config: any): {\n        [key: string]: any;\n    };\n    initChart(rerender?: any): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    renderChart(rerender?: any): void;\n}\n"]}