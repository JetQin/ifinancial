import { AfterViewInit, ElementRef, NgZone, OnChanges, SimpleChanges, ViewContainerRef } from '@angular/core';
import { IFilter, IScale } from 'viser';
import { ChartContext } from './chartService';
import * as ɵngcc0 from '@angular/core';
declare type eventFunc = (chart: any, ev: any) => void;
interface IBackground {
    stroke?: string;
    strokeOpacity?: number;
    lineWidth?: number;
    fill?: string;
    fillOpactiy?: number;
    radius?: number;
}
export declare class Chart implements AfterViewInit, OnChanges {
    private context;
    private ngZone;
    data?: any;
    height?: number;
    width?: number;
    animate?: boolean | object;
    forceFit?: boolean;
    background?: IBackground;
    plotBackground?: IBackground;
    padding?: number | object | number[];
    scale?: IScale;
    theme?: string;
    renderer?: string;
    filter?: IFilter;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    onPlotEnter?: eventFunc;
    onPlotMove?: eventFunc;
    onPlotLeave?: eventFunc;
    onPlotClick?: eventFunc;
    onPlotDblClick?: eventFunc;
    chartDiv: ElementRef<HTMLDivElement>;
    private viewId;
    private componentId;
    private elem;
    private vcRef;
    constructor(context: ChartContext, elem: ElementRef, vcRef: ViewContainerRef, ngZone: NgZone);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private combineViewConfig;
    private combineChartConfig;
    private convertValueToNum;
    private combineContentConfig;
    private changeViewConfig;
    private getProps;
    private getViewType;
    private getComponentName;
    private initChart;
    private renderChart;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Chart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Chart, "v-chart", never, { "data": "data"; "height": "height"; "width": "width"; "animate": "animate"; "forceFit": "forceFit"; "background": "background"; "plotBackground": "plotBackground"; "padding": "padding"; "scale": "scale"; "theme": "theme"; "renderer": "renderer"; "filter": "filter"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; "onPlotEnter": "onPlotEnter"; "onPlotMove": "onPlotMove"; "onPlotLeave": "onPlotLeave"; "onPlotClick": "onPlotClick"; "onPlotDblClick": "onPlotDblClick"; }, {}, never, never>;
}
export {};

//# sourceMappingURL=Chart.d.ts.map