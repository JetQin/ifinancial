import { AfterViewInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { IAxis, ICoord, IFacet, IGuide, ILegend, IScale, ISeries, ITooltip, IViewConfig } from 'viser';
import * as ɵngcc0 from '@angular/core';
export declare class LiteChart implements AfterViewInit, OnChanges {
    data: any;
    width?: number;
    height?: number;
    gemo?: string;
    color?: any[];
    label?: boolean;
    radius?: number;
    innerRadius?: number;
    forceFit?: boolean;
    fields?: any;
    type?: any;
    opacity?: any;
    size?: any;
    coord?: ICoord;
    scale?: IScale;
    axis?: IAxis;
    guide?: IGuide;
    series?: ISeries;
    tooltip?: ITooltip;
    facet?: IFacet;
    legend?: ILegend;
    theme?: string;
    renderer?: string;
    pie?: boolean;
    sector?: boolean;
    line?: boolean;
    smoothLine?: boolean;
    dashLine?: boolean;
    area?: boolean;
    stackArea?: boolean;
    smoothArea?: boolean;
    bar?: boolean;
    stackBar?: boolean;
    dodgeBar?: boolean;
    point?: boolean;
    funnel?: boolean;
    pyramid?: boolean;
    schema?: boolean;
    box?: boolean;
    candle?: boolean;
    polygon?: boolean;
    contour?: boolean;
    heatmap?: boolean;
    edge?: boolean;
    sankey?: boolean;
    errorBar?: boolean;
    chartDiv: ElementRef<HTMLDivElement>;
    config: any;
    views: IViewConfig;
    chart: any;
    combineViewConfig(props: any, config: any): any;
    combineChartConfig(props: any, config: any): any;
    combineSeriesConfig(props: any, config: any): any;
    ngAfterViewInit(): void;
    getProps(allProps: any): any;
    getViewChartConfig(config: any): {
        [key: string]: any;
    };
    initChart(rerender?: any): void;
    ngOnChanges(changes: SimpleChanges): void;
    renderChart(rerender?: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LiteChart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LiteChart, "v-liteChart", never, { "data": "data"; "width": "width"; "height": "height"; "gemo": "gemo"; "color": "color"; "label": "label"; "radius": "radius"; "innerRadius": "innerRadius"; "forceFit": "forceFit"; "fields": "fields"; "type": "type"; "opacity": "opacity"; "size": "size"; "coord": "coord"; "scale": "scale"; "axis": "axis"; "guide": "guide"; "series": "series"; "tooltip": "tooltip"; "facet": "facet"; "legend": "legend"; "theme": "theme"; "renderer": "renderer"; "pie": "pie"; "sector": "sector"; "line": "line"; "smoothLine": "smoothLine"; "dashLine": "dashLine"; "area": "area"; "stackArea": "stackArea"; "smoothArea": "smoothArea"; "bar": "bar"; "stackBar": "stackBar"; "dodgeBar": "dodgeBar"; "point": "point"; "funnel": "funnel"; "pyramid": "pyramid"; "schema": "schema"; "box": "box"; "candle": "candle"; "polygon": "polygon"; "contour": "contour"; "heatmap": "heatmap"; "edge": "edge"; "sankey": "sankey"; "errorBar": "errorBar"; }, {}, never, never>;
}

//# sourceMappingURL=LiteChart.d.ts.map