{"version":3,"file":"Legend.d.ts","sources":["Legend.d.ts"],"names":[],"mappingssourcesContent":["import { Chart } from '../Chart';\nimport * as IStyle from './Style';\ndeclare type func = () => void;\ndeclare type formatterFunc = (val: number) => string | number;\ndeclare type eventFunc = (ev: any, chart: any) => void;\ninterface IBackground {\n    stroke?: string;\n    strokeOpacity?: number;\n    lineWidth?: number;\n    fill?: string;\n    fillOpactiy?: number;\n    radius?: number;\n}\ndeclare class Legend extends Chart {\n    dataKey?: string;\n    show?: boolean;\n    position?: string;\n    title?: null | object;\n    custom?: boolean;\n    offset?: number;\n    offsetX?: number;\n    offsetY?: number;\n    items?: object[];\n    itemGap?: number;\n    titleGap?: number;\n    itemMarginBottom?: number;\n    itemsGroup?: object[];\n    layout?: string;\n    allowAllCanceled?: boolean;\n    backPadding?: number[];\n    itemWidth?: number;\n    unCheckColor?: string;\n    background?: IBackground;\n    itemFormatter?: formatterFunc;\n    marker?: string | func;\n    textStyle?: IStyle.ITextStyle;\n    checkable?: boolean;\n    clickable?: boolean;\n    hoverable?: boolean;\n    useHtml?: boolean;\n    autoWrap?: boolean;\n    autoPosition?: boolean;\n    container?: any;\n    containerTpl?: string;\n    itemTpl?: string | func;\n    selectedMode?: string;\n    reversed?: boolean;\n    slidable?: boolean;\n    width?: number;\n    height?: number;\n    legendMarker?: any;\n    legendListItem?: any;\n    legendTitle?: any;\n    legendList?: any;\n    legendStyle?: any;\n    attachLast?: boolean;\n    flipPage?: boolean;\n    name?: boolean;\n    reactive?: boolean;\n    sizeType?: string;\n    isSegment?: boolean;\n    onHover?: eventFunc;\n    onClick?: eventFunc;\n    onTitleMouseDown?: eventFunc;\n    onTitleMouseMove?: eventFunc;\n    onTitleMouseLeave?: eventFunc;\n    onTitleMouseUp?: eventFunc;\n    onTitleClick?: eventFunc;\n    onTitleDblClick?: eventFunc;\n    onTitleTouchStart?: eventFunc;\n    onTitleTouchMove?: eventFunc;\n    onTitleTouchEnd?: eventFunc;\n    onItemMouseDown?: eventFunc;\n    onItemMouseMove?: eventFunc;\n    onItemMouseLeave?: eventFunc;\n    onItemMouseUp?: eventFunc;\n    onItemClick?: eventFunc;\n    onItemDblClick?: eventFunc;\n    onItemTouchStart?: eventFunc;\n    onItemTouchMove?: eventFunc;\n    onItemTouchEnd?: eventFunc;\n    onMarkerMouseDown?: eventFunc;\n    onMarkerMouseMove?: eventFunc;\n    onMarkerMouseLeave?: eventFunc;\n    onMarkerMouseUp?: eventFunc;\n    onMarkerClick?: eventFunc;\n    onMarkerDblClick?: eventFunc;\n    onMarkerTouchStart?: eventFunc;\n    onMarkerTouchMove?: eventFunc;\n    onMarkerTouchEnd?: eventFunc;\n    onTextMouseDown?: eventFunc;\n    onTextMouseMove?: eventFunc;\n    onTextMouseLeave?: eventFunc;\n    onTextMouseUp?: eventFunc;\n    onTextClick?: eventFunc;\n    onTextDblClick?: eventFunc;\n    onTextTouchStart?: eventFunc;\n    onTextTouchMove?: eventFunc;\n    onTextTouchEnd?: eventFunc;\n}\nexport { Legend };\n"]}