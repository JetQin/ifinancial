import { Chart } from '../Chart';
import * as ɵngcc0 from '@angular/core';
declare type eventFunc = (ev: any, chart: any) => void;
declare class Series extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    onLabelMouseDown?: eventFunc;
    onLabelMouseMove?: eventFunc;
    onLabelMouseLeave?: eventFunc;
    onLabelMouseUp?: eventFunc;
    onLabelClick?: eventFunc;
    onLabelDblClick?: eventFunc;
    onLabelTouchStart?: eventFunc;
    onLabelTouchMove?: eventFunc;
    onLabelTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Series, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Series, "v-series", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; "onLabelMouseDown": "onLabelMouseDown"; "onLabelMouseMove": "onLabelMouseMove"; "onLabelMouseLeave": "onLabelMouseLeave"; "onLabelMouseUp": "onLabelMouseUp"; "onLabelClick": "onLabelClick"; "onLabelDblClick": "onLabelDblClick"; "onLabelTouchStart": "onLabelTouchStart"; "onLabelTouchMove": "onLabelTouchMove"; "onLabelTouchEnd": "onLabelTouchEnd"; }, {}, never, never>;
}
declare class Pie extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Pie, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Pie, "v-pie", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Sector extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Sector, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Sector, "v-sector", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Line extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Line, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Line, "v-line", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class SmoothLine extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SmoothLine, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SmoothLine, "v-smooth-line", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class DashLine extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DashLine, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DashLine, "v-dash-line", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Area extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Area, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Area, "v-area", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class StackArea extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StackArea, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<StackArea, "v-stack-area", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class SmoothArea extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SmoothArea, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SmoothArea, "v-smooth-area", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Bar extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Bar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Bar, "v-bar", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class StackBar extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StackBar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<StackBar, "v-stack-bar", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class DodgeBar extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DodgeBar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DodgeBar, "v-dodge-bar", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Interval extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Interval, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Interval, "v-interval", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class StackInterval extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StackInterval, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<StackInterval, "v-stack-interval", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class DodgeInterval extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DodgeInterval, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DodgeInterval, "v-dodge-interval", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Point extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Point, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Point, "v-point", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Funnel extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Funnel, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Funnel, "v-funnel", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Pyramid extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Pyramid, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Pyramid, "v-pyramid", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Schema extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Schema, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Schema, "v-schema", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Box extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Box, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Box, "v-box", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Candle extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Candle, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Candle, "v-candle", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Polygon extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Polygon, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Polygon, "v-polygon", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Contour extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Contour, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Contour, "v-contour", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Heatmap extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Heatmap, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Heatmap, "v-heatmap", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Edge extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Edge, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Edge, "v-edge", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Sankey extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Sankey, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Sankey, "v-sankey", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class ErrorBar extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ErrorBar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ErrorBar, "v-error-bar", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class JitterPoint extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<JitterPoint, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<JitterPoint, "v-jitter-point", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Path extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Path, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Path, "v-path", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
declare class Venn extends Chart {
    quickType?: string;
    position?: string | string[];
    gemo?: string;
    adjust?: string | string[] | object[];
    color?: any;
    shape?: any;
    size?: any;
    opacity?: any;
    label?: any;
    tooltip?: any;
    style?: object;
    select?: any;
    active?: boolean | object | [boolean, object];
    animate?: boolean | object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Venn, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Venn, "v-venn", never, { "quickType": "quickType"; "position": "position"; "gemo": "gemo"; "adjust": "adjust"; "color": "color"; "shape": "shape"; "size": "size"; "opacity": "opacity"; "label": "label"; "tooltip": "tooltip"; "style": "style"; "select": "select"; "active": "active"; "animate": "animate"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
export { Series, Pie, Sector, Line, SmoothLine, DashLine, Area, StackArea, SmoothArea, Bar, StackBar, DodgeBar, Interval, StackInterval, DodgeInterval, Point, Funnel, Pyramid, Schema, Box, Candle, Polygon, Contour, Heatmap, Edge, Sankey, ErrorBar, JitterPoint, Path, Venn, };

//# sourceMappingURL=Series.d.ts.map