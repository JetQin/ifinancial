import { Chart } from '../Chart';
import * as Style from './Style';
import * as ɵngcc0 from '@angular/core';
declare type func = () => void;
declare type eventFunc = (ev: any, chart: any) => void;
interface ILineText {
    position?: string | number;
    autoRotate?: number;
    style?: Style.ILineStyle;
    content?: string;
    offsetX?: number;
    offsetY?: number;
}
interface IRegionStyle {
    lineWidth?: number;
    fill?: string;
    fillOpacity?: number;
    stroke?: string;
}
declare class Guide extends Chart {
    type?: 'line' | 'text' | 'image' | 'region' | 'arc' | 'regionFilter' | 'dataMarker' | 'dataRegion';
    top?: boolean;
    zIndex?: number;
    start?: object | Array<number | string> | func;
    end?: object | Array<number | string> | func;
    position?: object | Array<number | string> | func;
    lineStyle?: Style.ILineStyle;
    content?: string;
    style?: object | Style.ITextStyle | IRegionStyle;
    text?: ILineText;
    src?: string;
    width?: number;
    height?: number;
    offsetX?: number;
    offsetY?: number;
    alignX?: string;
    alignY?: string;
    html?: string;
    color?: string;
    apply?: string[];
    lineLength?: number;
    direction?: string;
    display?: object;
    onMouseDown?: eventFunc;
    onMouseMove?: eventFunc;
    onMouseLeave?: eventFunc;
    onMouseUp?: eventFunc;
    onClick?: eventFunc;
    onDblClick?: eventFunc;
    onTouchStart?: eventFunc;
    onTouchMove?: eventFunc;
    onTouchEnd?: eventFunc;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Guide, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Guide, "v-guide", never, { "type": "type"; "top": "top"; "zIndex": "zIndex"; "start": "start"; "end": "end"; "position": "position"; "lineStyle": "lineStyle"; "content": "content"; "style": "style"; "text": "text"; "src": "src"; "width": "width"; "height": "height"; "offsetX": "offsetX"; "offsetY": "offsetY"; "alignX": "alignX"; "alignY": "alignY"; "html": "html"; "color": "color"; "apply": "apply"; "lineLength": "lineLength"; "direction": "direction"; "display": "display"; "onMouseDown": "onMouseDown"; "onMouseMove": "onMouseMove"; "onMouseLeave": "onMouseLeave"; "onMouseUp": "onMouseUp"; "onClick": "onClick"; "onDblClick": "onDblClick"; "onTouchStart": "onTouchStart"; "onTouchMove": "onTouchMove"; "onTouchEnd": "onTouchEnd"; }, {}, never, never>;
}
export { Guide };

//# sourceMappingURL=Guide.d.ts.map